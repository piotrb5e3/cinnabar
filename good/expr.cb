assert 1 + 2 * 4 == 9;
assert 11 % 5 == 1;
mul = lambda y : lambda x : x * y;
mul7 = mul(7);
assert mul7(7) + 1 == 50;

assert true != false && (false || true) && true;

assert (1 if (3 == 4) else 2) == 2;

/*
// Not implemented yet
xx = 17;
d = #{
    "aaa": -1,
    "bbb": 2,
    "ccc": lambda a, b, c : xx - a + -b * c,
};

xx = 0;
assert d.ccc(0, 0, 0) == 17;

assert d.aaa == -1 && d["bbb"] == 2;

d.aaa = d.bbb;
d["fff"] = d["aaa"];
assert d["aaa"] == 2 && d.fff == 2;
*/
print "OK\n";
