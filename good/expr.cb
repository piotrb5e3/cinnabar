assert 1 + 2 * 4 == 9;
assert 11 % 5 == 1;
assert 2 ^ 10 == 1024;
assert -32 == (0 - 32);
assert !false;

assert "Hello"[4] == 'o';

t = 2;
mul2 = lambda y : lambda x : t * x * y;
t = 0;
mul14 = mul2(7);
assert mul14(7) + 2 == 100;

t = 2;
mul2_ = fun (y) {
  return fun (x) {
    return t * x * y;
  };
};
t = 0;

mul14_ = mul2_(7);
assert mul14_(10) + 10 == 150;

assert true != false && (false || true) && true;

assert (1 if (3 == 4) else 2) == 2;

assert 24 <= 42;
assert 24 < 42;
assert 42 > 24;
assert 42 >= 24;
assert 33 / 2 == 16;

assert [1,2,3,[1,2,3,[1,2,3,[]]]][3][3][3] == "";

l = [0];
csum = fun(i) {
  l[0] = l[0] + i;
  return l[0];
};

x = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
assert [1, 2, 3, [csum(g) for g in x]][3] == [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

print "OK\n";
